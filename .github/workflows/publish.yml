name: 'Publish release'
on:
  push:
    tags:
      - '*'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout application
        uses: actions/checkout@v4
      - run: echo "npmRegistries:" >> .yarnrc.yml
      - run: echo '  "https://npm.pkg.github.com":' >> .yarnrc.yml
      - run: echo -n '    npmAuthToken:' >> .yarnrc.yml
      - run: echo ' ${{secrets.GITHUB_TOKEN}}' >> .yarnrc.yml
      - run: echo -n '    npmAlwaysAuth:' >> .yarnrc.yml
      - run: echo ' true' >> .yarnrc.yml
      - run: echo 'npmScopes:' >> .yarnrc.yml
      - run: echo '  psu-ooe:' >> .yarnrc.yml
      - run: echo -n '    npmAlwaysAuth:' >> .yarnrc.yml
      - run: echo ' true' >> .yarnrc.yml
      - run: echo -n '    npmRegistryServer:' >> .yarnrc.yml
      - run: echo ' "https://npm.pkg.github.com"' >> .yarnrc.yml
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: 'NPM install'
        run: npm ci
      - name: Composer install
        uses: "ramsey/composer-install@v2"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/index.html
          asset_name: index.html
          asset_content_type: text/html